# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master, develop, feature, CItest ]
  pull_request:
    branches: [ master, develop, feature ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: url
        ports:
          - 3306
        options: >- 
          --health-cmd "mysqladmin ping" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3
    strategy:
      matrix:
        mongodb-version: [4.2]
    steps:
    - name: Start MongoDB v${{ matrix.mongodb-version }}
      uses: supercharge/mongodb-github-action@1.2.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        mongodb-replica-set: rs-test
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Run the Maven verify phase
      run: mvn -B verify --file backend/pom.xml
    - name: Build with Maven
      run: mvn -B package --file backend/pom.xml
    - name: Run java checkstyle
      uses: nikitasavinov/checkstyle-action@0.3.0
      with:
        # Report level for reviewdog [info,warning,error]
        level: warning
        # Reporter of reviewdog command [github-pr-check,github-pr-review]
        reporter: github-pr-review
        # Filtering for the reviewdog command [added,diff_context,file,nofilter].
        filter_mode: added
        # Exit code for reviewdog when errors are found [true,false]
        fail_on_error: true
        # Checkstyle config file
        checkstyle_config: google_checks.xml
        # Working directory relative to the root directory.
        workdir: ./backend
        # Tool name to use for reviewdog reporter
        tool_name: reviewdog
