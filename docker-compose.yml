version: '3.2'

services:
  backend:
    image: reevoo2020/backend
    container_name: backend
    hostname: backend
    restart: always
    ports:
      - "80:8080"
    environment:
      - JVM_OPTS="-Xms128m -Xmx128m"
      - JASYPT_ENCRYPTOR_PASSWORD=SXSYYDS
      - IP2REGION=./ip2region.db
    networks:
      - demo

  redirect:
    image: reevoo2020/redirect-service:1.0
    container_name: redirect
    hostname: redirect
    restart: always
    ports:
      - "9092:9090"
    networks:
      - demo

  visitLog:
    image: reevoo2020/visitLog-service:1.0
    container_name: visitLog
    hostname: visitLog
    restart: always
    ports:
      - "9094:9092"
    networks:
      - demo

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    networks:
      - demo

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - demo

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    restart: always
    ports:
      - "4040:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
    networks:
      - demo

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - demo

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.0
    container_name: kibana
    hostname: kibana
    restart: always
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - demo

  reverse-proxy:
    image: traefik:v2.2
    container_name: reverse-proxy
    hostname: reverse-proxy
    restart: always
    command: --api.insecure=true --providers.docker
    ports:
      - "81:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
    networks:
      - demo

  whoami:
    image: containous/whoami
    hostname: whoami
    restart: always
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
    networks:
      - demo
networks:
  demo:
    driver: bridge
