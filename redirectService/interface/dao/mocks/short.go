// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ao7777/redirectService/interface/dao (interfaces: IShortUrl)

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
        entity "github.com/ao7777/redirectService/entity"
        gomock "github.com/golang/mock/gomock"
        reflect "reflect"
)

// MockIShortUrl is a mock of IShortUrl interface
type MockIShortUrl struct {
        ctrl     *gomock.Controller
        recorder *MockIShortUrlMockRecorder
}

// MockIShortUrlMockRecorder is the mock recorder for MockIShortUrl
type MockIShortUrlMockRecorder struct {
        mock *MockIShortUrl
}

// NewMockIShortUrl creates a new mock instance
func NewMockIShortUrl(ctrl *gomock.Controller) *MockIShortUrl {
        mock := &MockIShortUrl{ctrl: ctrl}
        mock.recorder = &MockIShortUrlMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIShortUrl) EXPECT() *MockIShortUrlMockRecorder {
        return m.recorder
}

// ByID mocks base method
func (m *MockIShortUrl) ByID(arg0 int) (entity.ShortURL, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "ByID", arg0)
        ret0, _ := ret[0].(entity.ShortURL)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// ByID indicates an expected call of ByID
func (mr *MockIShortUrlMockRecorder) ByID(arg0 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ByID", reflect.TypeOf((*MockIShortUrl)(nil).ByID), arg0)
}

// ByShortURL mocks base method
func (m *MockIShortUrl) ByShortURL(arg0 string) (entity.ShortURL, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "ByShortURL", arg0)
        ret0, _ := ret[0].(entity.ShortURL)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// ByShortURL indicates an expected call of ByShortURL
func (mr *MockIShortUrlMockRecorder) ByShortURL(arg0 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ByShortURL", reflect.TypeOf((*MockIShortUrl)(nil).ByShortURL), arg0)
}

// Destr mocks base method
func (m *MockIShortUrl) Destr() {
        m.ctrl.T.Helper()
        m.ctrl.Call(m, "Destr")
}

// Destr indicates an expected call of Destr
func (mr *MockIShortUrlMockRecorder) Destr() *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destr", reflect.TypeOf((*MockIShortUrl)(nil).Destr))
}
// InitShortDAO mocks base method
func (m *MockIShortUrl) InitShortDAO() error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "InitShortDAO")
        ret0, _ := ret[0].(error)
        return ret0
}

// InitShortDAO indicates an expected call of InitShortDAO
func (mr *MockIShortUrlMockRecorder) InitShortDAO() *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitShortDAO", reflect.TypeOf((*MockIShortUrl)(nil).InitShortDAO))
}