// Code generated by MockGen. DO NOT EDIT.
// Source: DAO.go

package dao

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/violedo/logService/entity"
	reflect "reflect"
)

// MockDAO is a mock of DAO interface
type MockDAO struct {
	ctrl     *gomock.Controller
	recorder *MockDAOMockRecorder
}

// MockDAOMockRecorder is the mock recorder for MockDAO
type MockDAOMockRecorder struct {
	mock *MockDAO
}

// NewMockDAO creates a new mock instance
func NewMockDAO(ctrl *gomock.Controller) *MockDAO {
	mock := &MockDAO{ctrl: ctrl}
	mock.recorder = &MockDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockDAO) EXPECT() *MockDAOMockRecorder {
	return _m.recorder
}

// InitDB mocks base method
func (_m *MockDAO) InitDB() error {
	ret := _m.ctrl.Call(_m, "InitDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// InitDB indicates an expected call of InitDB
func (_mr *MockDAOMockRecorder) InitDB() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "InitDB", reflect.TypeOf((*MockDAO)(nil).InitDB))
}

// Destr mocks base method
func (_m *MockDAO) Destr() {
	_m.ctrl.Call(_m, "Destr")
}

// Destr indicates an expected call of Destr
func (_mr *MockDAOMockRecorder) Destr() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Destr", reflect.TypeOf((*MockDAO)(nil).Destr))
}

// InsertLog mocks base method
func (_m *MockDAO) InsertLog(_param0 entity.Visit) error {
	ret := _m.ctrl.Call(_m, "InsertLog", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertLog indicates an expected call of InsertLog
func (_mr *MockDAOMockRecorder) InsertLog(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "InsertLog", reflect.TypeOf((*MockDAO)(nil).InsertLog), arg0)
}

// UpdateUser mocks base method
func (_m *MockDAO) UpdateUser(ID uint64) error {
	ret := _m.ctrl.Call(_m, "UpdateUser", ID)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUser indicates an expected call of UpdateUser
func (_mr *MockDAOMockRecorder) UpdateUser(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "UpdateUser", reflect.TypeOf((*MockDAO)(nil).UpdateUser), arg0)
}

// UpdateShorten mocks base method
func (_m *MockDAO) UpdateShorten(ID int64) error {
	ret := _m.ctrl.Call(_m, "UpdateShorten", ID)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateShorten indicates an expected call of UpdateShorten
func (_mr *MockDAOMockRecorder) UpdateShorten(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "UpdateShorten", reflect.TypeOf((*MockDAO)(nil).UpdateShorten), arg0)
}

// ByShortenID mocks base method
func (_m *MockDAO) ByShortenID(shortenID int64) (uint64, error) {
	ret := _m.ctrl.Call(_m, "ByShortenID", shortenID)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ByShortenID indicates an expected call of ByShortenID
func (_mr *MockDAOMockRecorder) ByShortenID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ByShortenID", reflect.TypeOf((*MockDAO)(nil).ByShortenID), arg0)
}
